{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","isReversed","App","useState","sortField","setSortField","visibleOrder","goods","reversed","orderedField","sort","good1","good2","localeCompare","length","reverse","sortGoodsByParams","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SACtBC,GAAa,EA2BV,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EA3BR,SAA2BC,EAA3B,GAAyE,IAArCH,EAAoC,EAApCA,UAAoC,IAAzBI,gBAAyB,MAAdP,EAAc,EAChEQ,EAAY,YAAOF,GAqBzB,OAnBIH,GACFK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXN,GACFC,EAAaM,UAGRN,EAKcO,CACnBlB,EACA,CAAEM,YAAWH,eAGf,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,IAAcL,IAE9BqB,QAAS,kBAAMf,EAAaN,IAP9B,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAcJ,IAE9BoB,QAAS,kBAAMf,EAAaL,IAP9B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAflB,IAEhBmB,QAAS,WACPnB,GAAcA,EACdI,EAAaD,IATjB,sBAeiB,KAAdA,IAAmC,IAAfH,IACrB,wBACEiB,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,YACrCC,QAAS,WACPf,EAAa,IACbJ,GAAa,GALjB,sBAaJ,6BACGK,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YChHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.72fda1b9.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\nlet isReversed = false;\n\nfunction sortGoodsByParams(goods, { sortField, reversed = isReversed }) {\n  const orderedField = [...goods];\n\n  if (sortField) {\n    orderedField.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    orderedField.reverse();\n  }\n\n  return orderedField;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const visibleOrder = sortGoodsByParams(\n    goodsFromServer,\n    { sortField, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_NAME },\n          )}\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': isReversed === false },\n          )}\n          onClick={() => {\n            isReversed = !isReversed;\n            setSortField(sortField);\n          }}\n        >\n          Reverse\n        </button>\n\n        {((sortField !== '' || isReversed === true) && (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', 'is-light')}\n            onClick={() => {\n              setSortField('');\n              isReversed = false;\n            }}\n          >\n            Reset\n          </button>\n        ))}\n      </div>\n\n      <ul>\n        {visibleOrder.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}